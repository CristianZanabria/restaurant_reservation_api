spring.application.name=restaurant_reservation_api


# Configuracion de la base de datos
#spring.datasource.username=postgres
#spring.datasource.password=password
#spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://dpg-cstdvt5ds78s73ci2upg-a.oregon-postgres.render.com:5432/restaurant_db_n4el
spring.datasource.username=zdev
spring.datasource.password=xUGOZwvwZqNaPzUahUwOVxcR6jjHmFuz
spring.datasource.driver-class-name=org.postgresql.Driver

# Propiedades de JPA/Hibernate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Otras configuraciones (opcional)
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Configuracion del path base para los endpoints
server.servlet.context-path=/api/v1

# Clave secreta utilizada para firmar y verificar los tokens JWT. Debe mantenerse segura.
jwt.secret=chLhMF9w3mwDutysbQxsX8x4CGwZef4mayTGSmbAG2BUsXbYFKvXrVfnPCa62PJxp9TuHxx4PQAS2yGUTBAPy3Dy53j8Uj2wb2AQ3nK8VLg7tUx9HCzHATEp
# Tiempo de validez de los tokens JWT en segundos (30 dias).
jwt.validity-in-seconds=2592000

zdev.openapi.dev-url=http://localhost:8080/api/v1
zdev.openapi.prod-url=https://restaurant-reservation-api-kv05.onrender.com/api/v1

paypal.client-id=AderXUwO7K3PjQEaUXjfak5ubIHbUG1VxWslCPL2LWMEq6hfcW88ETpKptl0Qn2wmyt5K966i9x_phR-
paypal.client-secret=ENpQ4AA9_4u3OuouQvpm5o48URHxTivQ7FlRbuRRJSc55ZKAWOo99LmCwA3ostMHsRvQdBluBxFN44-8
paypal.api-base=https://api-m.sandbox.paypal.com
